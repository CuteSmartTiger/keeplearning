<template>
  <div>
    <Card>
      <!--<Form ref="formInline" :model="page"  inline>-->
        <!--<FormItem prop="user">-->
          <!--<Input type="text" v-model="page.name" placeholder="策略名称">-->
          <!--<Icon type="ios-search" slot="prepend"></Icon>-->
          <!--</Input>-->
        <!--</FormItem>-->
        <!--<FormItem>-->
          <!--<Button type="primary" @click="handleList()">搜索</Button>-->
        <!--</FormItem>-->
      <!--</Form>-->
      <Button style="margin: 10px auto;" type="primary" @click="exportExcel" >新增</Button>
      <Button style="margin: 10px auto;" type="primary" @click="exportExcel" >批量删除</Button>
      <Button style="margin: 10px auto;" type="primary" @click="exportExcel" >导出为Csv文件</Button>
      <tables ref="selection" :highlight-row="true"   searchable :searchs="searchs" v-model="tableData" :value="tableData" :columns="columns" @on-delete="handleDelete" @on-search="onSearch"/>
      <Page  show-total  :total="count" :page-size="page.limit" :current="page.marker" style="margin: 10px auto;"/>
<Modal
      :visible.sync="edit"
      title="普通的Modal对话框标题"
      @on-ok="onEdit"
      @on-cancel="cancel">
      <Form :model="editForm" :label-width="80">
        <FormItem label="策略名称">
          <Input :value.sync="editForm.name" placeholder="请输入" />
        </FormItem>
        <FormItem label="USB 重定向">
          <Switch :checked.sync="editForm.switch" size="large">
            <span slot="open">开启</span>
            <span slot="close">关闭</span>
          </Switch>
        </FormItem>
        <FormItem label="断开连接后锁屏">
          <Switch :checked.sync="editForm.switch" size="large">
            <span slot="open">开启</span>
            <span slot="close">关闭</span>
          </Switch>
        </FormItem>
        <FormItem label="MAC地址过滤">
          <Switch :checked.sync="editForm.switch" size="large">
            <span slot="open">开启</span>
            <span slot="close">关闭</span>
          </Switch>
        </FormItem>
        <FormItem label="允许连接的MAC地址">
          <Input :value.sync="" placeholder="请输入" />
        </FormItem>
        <FormItem label="自动匹配协议类型">
          <Switch :checked.sync="editForm.switch" size="large">
            <span slot="open">开启</span>
            <span slot="close">关闭</span>
          </Switch>
        </FormItem>
        <FormItem label="协议类型">
          <i-select :model.sync="editForm.select" placeholder="请选择">
            <i-option value="beijing">北京市</i-option>
            <i-option value="shanghai">上海市</i-option>
            <i-option value="shenzhen">深圳市</i-option>
          </i-select>
        </FormItem>
        <FormItem label="自动匹配FPS">
          <Switch :checked.sync="editForm.switch" size="large">
            <span slot="open">开启</span>
            <span slot="close">关闭</span>
          </Switch>
        </FormItem>
        <FormItem label="FPS">
          <Input :value.sync="" placeholder="请输入" />
        </FormItem>
        <FormItem label="比特率(Mbit/s)">
          <Input :value.sync="" placeholder="请输入" />
        </FormItem>
        <FormItem label="质量(%)">
          <Input :value.sync="" placeholder="请输入" />
        </FormItem>
        <FormItem label="3D支持">
          <Switch :checked.sync="editForm.switch" size="large">
            <span slot="open">开启</span>
            <span slot="close">关闭</span>
          </Switch>
        </FormItem>
        <FormItem label="允许从网关连接">
          <Switch :checked.sync="editForm.switch" size="large">
            <span slot="open">开启</span>
            <span slot="close">关闭</span>
          </Switch>
        </FormItem>
        <FormItem label="自动登录进虚拟机">
          <Switch :checked.sync="editForm.switch" size="large">
            <span slot="open">开启</span>
            <span slot="close">关闭</span>
          </Switch>
        </FormItem>
        <FormItem label="独占桌面">
          <Switch :checked.sync="editForm.switch" size="large">
            <span slot="open">开启</span>
            <span slot="close">关闭</span>
          </Switch>
        </FormItem>
      </Form>
    </Modal>
    </Card>

  </div>
</template>

<script>
import Tables from '_c/tables'
import {getRules} from '@/libs/ruleValidate'
import { getParametersData } from '@/api/policies'
export default {
  name: 'policies_manage_page',
  components: {
    Tables
  },
  data () {
    return {
      edit: false,
      columns: [
        {
          type: 'selection',
          width: 60,
          align: 'center'
        },
        {title: '策略名称', key: 'name', sortable: true},
        {
          title: '操作',
          width: 240,
          key: 'handle',
          options: ['delete'],
          button: [
            (h, params, vm) => {
              return h('Poptip', {
                props: {
                  confirm: true,
                  title: '你确定要删除吗?'
                },
                on: {
                  'on-ok': () => {
                    vm.$emit('on-delete', params)
                    vm.$emit('input', params.tableData.filter((item, index) => index !== params.row.initRowIndex))
                  }
                }
              }, [
                h('Button', '自定义删除')
              ])
            }
          ]
        }
      ],
      searchs: [
        {title: '策略名称', key: 'name'}
      ],
      count: 0,
      page: {
        limit: 5,
        marker: 1
      },
      editForm: {},
      tableData: []
    }
  },
  methods: {
    handleSelectAll (status) {
      this.$refs.selection.selectAll(status)
    },
    handleList () {
      getParametersData(this.page).then(res => {
        this.tableData = res.data
        this.count = res.count
      })
    },
    onSearch (params) {
       for (let key in params) {
         this.page[key] = params[key];
       }
       this.page.marker = 1;
       this.handleList()

    },
    handleDelete (params) {
      //console.log(params)
    },
    exportExcel () {
      this.$refs.tables.exportCsv({
        filename: `table-${(new Date()).valueOf()}.csv`
      })
    },
    onEdit () {
      this.$Message.info('点击了确定');
    },
    cancel () {
      this.$Message.info('点击了取消');
    }
  },
  mounted () {
    this.handleList()
  }
}
</script>

<style>

</style>
